#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#

""" run sed on a directory. """

## basic imports

import sys
import os
import os.path
import shutil
import errno

## defines

try: homedir = os.path.abspath(os.path.expanduser("~"))
except: homedir = os.getcwd()
newdir = homedir + os.sep + "tlnew"
source = homedir + os.sep + "tlnew" + os.sep + "new"

ignore = ["__pycache__", "contrib", "data", "static", "sed", "tlnest", "dist", "egg", "tar.gz"]
ignorestart = ["."]

## arguments

try: sedstring = sys.argv[1]
except IndexError:
    print("tl-sed <sedstring>")
    os._exit(1)

if not sedstring:
    print("tl-sed <sedstring>")
    os._exit(1)

print("STARTING")

if not os.path.isdir(newdir): os.mkdir(newdir)

## gethighest function

def gethighest(ddir, ffile):
    """ determine new file extension. """
    highest = 0
    for i in os.listdir(ddir):
        if os.path.isdir(ddir + os.sep + i) and ffile in i:
            try: seqnr = i.split('.')[1]
            except IndexError: continue
            try:
                if int(seqnr) > highest: highest = int(seqnr)  
            except ValueError: pass
    ffile += '.' + str(highest + 1)
    return ddir + os.sep + ffile   

## dosed function

def dosed(filename, sedstring):
    """ replace oldbot strings with the new one. """
    f = open(filename, 'r')
    tmp = filename + '.tmp'
    fout = open(tmp, 'w')
    try:
        seds = sedstring.split('/')
        fr = seds[1].replace('\\', '')
        to = seds[2].replace('\\', '')
        for line in f:
            l = line
            l = l.replace(fr,to)
            fout.write(l)
    finally:
        fout.flush()
        fout.close()
    try: os.rename(tmp, filename)
    except WindowsError: os.remove(filename) ; os.rename(tmp, filename)

## bootstrap function

def doreplace(ddir, sedstring):
    """ loop over the directories copying and sedding the files. """
    print("dir: %s: sedstring: %s" % (ddir, sedstring))
    for f in os.listdir(ddir):
        donext = False
        path = ddir + os.sep + f
        for i in ignore:
            if i in f: print("ignoring %s" % f) ; donext = True ; break
        for sw in ignorestart:
            if f.startswith(sw): print("ignoring %s" % f) ; donext = True ; break
        if donext: continue
        if os.path.isdir(path): doreplace(path, sedstring) ; continue
        dosed(path, sedstring)
        print("done %s" % path)

## backup the old dir

target = gethighest(newdir, "new")
print("COPYING %s TO %s" % (source, target))
try: shutil.copytree(source, target)
except OSError: pass

try: shutil.rmtree(source)
except: pass

## init "new" directory

try: shutil.copytree(os.getcwd(), source)
except OSError: print("can't copy %s to %s" % (os.getcwd(), newdir)) ; os._exit(1)

## do the actual sed thing on the new directory

doreplace(source, sedstring)
print("DONE")
